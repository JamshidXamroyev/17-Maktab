{"version":3,"file":"static/js/250.1f913a46.chunk.js","mappings":"6LAMA,MAoGA,EApGcA,KAEZ,MAAOC,EAAOC,IAAYC,EAAAA,EAAAA,UAAS,KAC5BC,EAAUC,IAAeF,EAAAA,EAAAA,UAAS,KAElCG,EAAOC,IAAYJ,EAAAA,EAAAA,UAAS,OAC5BK,EAAKC,IAAUN,EAAAA,EAAAA,UAAS,OACxBO,EAAMC,IAAWR,EAAAA,EAAAA,WAAS,GAG3BS,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MAGVC,EAAaA,KAClBC,YAAW,KACTf,EAAS,IACTG,EAAY,IACZE,EAAS,MACTE,EAAO,GAAG,GACT,KAAK,EAyCV,OACES,EAAAA,EAAAA,MAAA,WAASC,UAAU,2DAA0DC,SAAA,EAC3EC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,wBAAuBC,UACpCC,EAAAA,EAAAA,KAAA,OAAKC,IAAI,+FAA+FC,IAAI,QAE9GL,EAAAA,EAAAA,MAAA,QAAMC,UAAU,kBAAkBK,SAAWC,GA3C3BC,WAGpB,GAFAD,EAAEE,iBACFhB,GAAQ,IACJV,IAAUG,EAIZ,OAHAG,EAAS,OAADqB,OAAS3B,EAAoB,GAAZ,UAAc,KAAA2B,OAAKxB,EAAuB,GAAZ,UAAc,oBACrEO,GAAQ,QACRK,IAIF,MAAMa,EAAQ,CAACC,UAAW7B,EAAO8B,aAAc3B,SACzC4B,MAAM,SAAU,CACpBC,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAUR,KACpBS,MAAKC,GAAOA,EAAIC,SAAQF,MAAKT,IAC9B,GAAGA,EAAKvB,MAIN,OAHAK,GAAQ,GACRJ,EAASsB,EAAKvB,YACdU,IAGAL,GAAQ,GACO,4BAAZkB,EAAKY,IACNhC,EAAO,+BAEPA,EAAO,sCAETO,IACAC,YAAW,KACTH,GAAS4B,EAAAA,EAAAA,IAAQb,IACjBjB,EAAS,IAAI,GACZ,KACL,GACA,EAOmD+B,CAAclB,GAAGL,SAAA,EAClEC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,qFAAoFC,SAAC,mBAClGd,IACGe,EAAAA,EAAAA,KAAA,KAAGF,UAAU,+EAA8EC,SAAEd,IAE9FE,IACCa,EAAAA,EAAAA,KAAA,KAAGF,UAAU,iFAAgFC,SAAEZ,KAEnGU,EAAAA,EAAAA,MAAA,OAAKC,UAAU,OAAMC,SAAA,EACnBC,EAAAA,EAAAA,KAAA,SAAOuB,QAAQ,QAAQzB,UAAU,6BAA4BC,SAAC,WAC9DC,EAAAA,EAAAA,KAAA,SACEF,UAAU,8IACV0B,KAAK,QACLC,YAAY,mBACZC,MAAO9C,EACP+C,SAAWvB,GAAMvB,EAASuB,EAAEwB,OAAOF,aAGvC7B,EAAAA,EAAAA,MAAA,OAAKC,UAAU,OAAMC,SAAA,EACnBC,EAAAA,EAAAA,KAAA,SAAOuB,QAAQ,WAAWzB,UAAU,kCAAiCC,SAAC,cACtEC,EAAAA,EAAAA,KAAA,SACEF,UAAU,6IACV0B,KAAK,WACLC,YAAY,sBACZC,MAAO3C,EACP4C,SAAWvB,GAAMpB,EAAYoB,EAAEwB,OAAOF,aAGtC7B,EAAAA,EAAAA,MAAA,UAAQC,UAAU,4LAA2LC,SAAA,CAAC,UAAQV,IAAQW,EAAAA,EAAAA,KAAC6B,EAAAA,EAAgB,CAACC,KAAM,OAAQC,MAAM,kBAElQ,C","sources":["components/authorization/login.jsx"],"sourcesContent":["import { CircularProgress } from \"@mui/material\"\r\nimport { useState } from \"react\"\r\nimport {useNavigate} from \"react-router-dom\"\r\nimport { getUser } from \"../../reducers/user\"\r\nimport { useDispatch } from \"react-redux\"\r\n\r\nconst Login = () => {\r\n  // States\r\n  const [email, setEmail] = useState(\"\")\r\n  const [password, setPassword] = useState(\"\")\r\n\r\n  const [error, setError] = useState(null)\r\n  const [msg, setMsg] = useState(null)\r\n  const [load, setLoad] = useState(false)\r\n\r\n\r\n  const navigate = useNavigate()\r\n  const dispatch = useDispatch()\r\n\r\n   // Clear Input handler\r\n   const clearInput = () => {\r\n    setTimeout(() => {\r\n      setEmail(\"\")\r\n      setPassword(\"\")\r\n      setError(null)\r\n      setMsg(\"\")\r\n    }, 2400);\r\n  }\r\n  // Submit Handler\r\n  const submitHandler = async (e) => {\r\n    e.preventDefault()\r\n    setLoad(true)\r\n    if(!email || !password){\r\n      setError(`Siz ${!email ? \"emailni\" : \"\"} ${!password ? \"parolni\" : \"\"} kiritmadingiz!`)\r\n      setLoad(false)\r\n      clearInput()\r\n      return\r\n    }\r\n\r\n    const data =  {userEmail: email, userPassword: password}\r\n    await fetch(\"/login\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      body: JSON.stringify(data)\r\n    }).then(res => res.json()).then(data => {\r\n      if(data.error){\r\n        setLoad(false)\r\n        setError(data.error)\r\n        clearInput()\r\n        return \r\n      } else{\r\n        setLoad(false)\r\n        if(data._id == \"6780a16303e4147c822137c3\"){\r\n          setMsg(\"Salom Admin! Xush Kelibsiz!\")\r\n        }else{\r\n          setMsg(\"Salom! Qaytganingizdan xursandman!\")\r\n        }\r\n        clearInput()\r\n        setTimeout(() => {\r\n          dispatch(getUser(data))\r\n          navigate(\"/\")\r\n        }, 2400);\r\n      }\r\n    })\r\n  }\r\n  return (\r\n    <section className=\"flex justify-between items-center h-[80vh] md:px-10 px-2\">\r\n      <div className=\"md:block hidden px-32\">\r\n        <img src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQ4aI0FLvynIZkFcY8IlrNmaPKnLOSaH2rYgw&s\" alt=\"\" />\r\n      </div>\r\n      <form className=\"md:w-1/2 w-full\" onSubmit={(e) => submitHandler(e)}>\r\n        <h1 className=\"font-bold lg:text-5xl md:text-4xl sm:text-3xl text-2xl font-Title text-center mb-3\">Tizimga kirish</h1>\r\n        {error && (\r\n            <p className=\"py-2 md:text-[20px] w-full text-center my-2 rounded-md text-white bg-red-700\">{error}</p>\r\n          )}\r\n          {msg && (\r\n            <p className=\"py-2 md:text-[20px] w-full text-center my-2 rounded-md text-white bg-green-700\">{msg}</p>\r\n          )}\r\n        <div className=\"my-3\">\r\n          <label htmlFor=\"email\" className=\"mb-2 text-gray-700 text-lg\">Email</label>\r\n          <input\r\n            className=\"border px-3 py-2 focus:shadow-md placeholder:text-base border-black outline-none rounded-sm w-full focus:scale-105 ease-in-out duration-300\"\r\n            type=\"email\"\r\n            placeholder=\"Enter your email\"\r\n            value={email} \r\n            onChange={(e) => setEmail(e.target.value)}\r\n          />\r\n        </div>\r\n        <div className=\"my-3\">\r\n          <label htmlFor=\"password\" className=\"mb-2 dark:text-gray-700 text-lg\">Password</label>\r\n          <input\r\n            className=\"border p-3 mb-2 focus:shadow-md placeholder:text-base border-black outline-none rounded-sm w-full focus:scale-105 ease-in-out duration-300\"\r\n            type=\"password\"\r\n            placeholder=\"Enter your password\"\r\n            value={password} \r\n            onChange={(e) => setPassword(e.target.value)}\r\n          />\r\n        </div>\r\n            <button className=\"bg-blue-500 link select-none hover:bg-blue-600 active:bg-blue-800 text-white font-bold py-2 w-full rounded focus:outline-none focus:shadow-outline flex justify-center items-center gap-4\">Kirish {load && <CircularProgress size={\"23px\"} color=\"white\"/>}</button>\r\n      </form>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default Login"],"names":["Login","email","setEmail","useState","password","setPassword","error","setError","msg","setMsg","load","setLoad","navigate","useNavigate","dispatch","useDispatch","clearInput","setTimeout","_jsxs","className","children","_jsx","src","alt","onSubmit","e","async","preventDefault","concat","data","userEmail","userPassword","fetch","method","headers","body","JSON","stringify","then","res","json","_id","getUser","submitHandler","htmlFor","type","placeholder","value","onChange","target","CircularProgress","size","color"],"sourceRoot":""}